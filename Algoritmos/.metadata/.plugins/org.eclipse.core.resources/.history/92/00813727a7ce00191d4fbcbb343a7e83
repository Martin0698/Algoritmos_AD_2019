
public class MergeSort {

	public static void mergeSort(int[] enteros){
	
		rec_MergeSort(enteros, 0, enteros.length-1);
	}
	
	private static void rec_MergeSort(int[] enteros, int min, int max){
		System.out.println( "Rec_Mergesort "+"min:"+min+ " max:"+ max);
		if(max-min >0) {
			int divide= (min + max)/2;
			
			rec_MergeSort(enteros, min, divide);
			merge(enteros, min, max);
			rec_MergeSort(enteros, divide+1, enteros.length-1);
			merge(enteros, min, max);
		}
		
		
		
	}
	
	private static void merge(int[] enteros, int min, int max ){
		System.out.println( "Mergesort "+"min:"+min+ " max:"+ max);
		int valor=0;
		
		while (min <= max){
			if( enteros[min]> enteros[max] ){
				valor= enteros[min];
				enteros[min]= enteros[max];
				enteros[max]= enteros[min];
			}
			min++;
			max--;
		}
	}
	
	private static void ImprimeArreglo(int[] enteros){
		for(int i=0; i< enteros.length;i++){
			System.out.print(enteros[i]+",");
		}
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] entero= {9,8,7,5,2,4,0,15};
		
		ImprimeArreglo(entero);
		System.out.print("");
		mergeSort(entero);
		
		
		
	}

}
