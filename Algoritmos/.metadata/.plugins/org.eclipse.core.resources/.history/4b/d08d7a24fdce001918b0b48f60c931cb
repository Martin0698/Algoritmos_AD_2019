public class Quicksort {
	
	public static void quickSort(int[] enteros){
	
		rec_QuickSort(enteros, 0, enteros.length-1);
	}

	
	private static void rec_QuickSort(int[] enteros, int min, int max) {
		System.out.println( "QuickSort "+"min:"+min+ " max:"+ max);
		int piv= ((max+min)/2);
		int rmin=min;
		int rmax=max;
		
		
		
		while (min <= max){
			
			if(min == max){
				
				break;
			}
			
			if((enteros[max] <= enteros[piv]) && (enteros[min]> enteros[piv])){
				int swap= enteros[max];
				enteros[max]= enteros[min];
				enteros[min]= swap;
				min++;
				max--;
			}
			
			else if(enteros[max] < enteros[piv]){
				min++;
			}
			else if(enteros[min] >= enteros[piv]){
				max--;
			}
			else if (!((enteros[max] <= enteros[piv]) && (enteros[min]> enteros[piv]))){
				min++;
				max--;
			}
		}
		
		
			particion(enteros, rmin, piv-1);
			particion(enteros, piv+1, rmax);
		
		
	}
	
	private static void  particion(int[] enteros, int min, int max) {
		while (max -min > 1){
		rec_QuickSort(enteros, min, max);
	
		}
	}
	
	private static void ImprimeArreglo(int[] enteros){
		for(int i=0; i< enteros.length;i++){
			System.out.print(enteros[i]+",");
		}
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		int[] entero= {15,5,20, 1, 8,20,25,30,4,5};
		
		ImprimeArreglo(entero);
		System.out.println(" ");
		quickSort(entero);
		System.out.println(" ");
		ImprimeArreglo(entero);
		
	}

}
